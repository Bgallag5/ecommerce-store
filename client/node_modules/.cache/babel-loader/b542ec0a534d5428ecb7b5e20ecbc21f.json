{"ast":null,"code":"import _slicedToArray from\"/Users/bengallagher/Desktop/projects/ecommerce-store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import CartItem from'../CartItem';import Auth from'../../utils/auth';import'./style.css';import{useStoreContext}from'../../utils/GlobalState';import{TOGGLE_CART}from'../../utils/actions';var Cart=function Cart(){var _useStoreContext=useStoreContext(),_useStoreContext2=_slicedToArray(_useStoreContext,2),state=_useStoreContext2[0],dispatch=_useStoreContext2[1];console.log('STATE:');console.log(state);function toggleCart(){dispatch({type:TOGGLE_CART});}function calculateTotal(){var sum=0;state.cart.forEach(function(item){sum+=item.price*item.purchaseQuantity;});return sum.toFixed(2);}if(!state.cartOpen){return/*#__PURE__*/React.createElement(\"div\",{className:\"cart-closed\",onClick:toggleCart},/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"trash\"},\"\\uD83D\\uDED2\"));}return/*#__PURE__*/React.createElement(\"div\",{className:\"cart\"},/*#__PURE__*/React.createElement(\"div\",{className:\"close\",onClick:toggleCart},\"[close]\"),/*#__PURE__*/React.createElement(\"h2\",null,\"Shopping Cart\"),state.cart.length?/*#__PURE__*/React.createElement(\"div\",null,state.cart.map(function(item){return/*#__PURE__*/React.createElement(CartItem,{key:item._id,item:item});}),/*#__PURE__*/React.createElement(\"div\",{className:\"flex-row space-between\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Total: $\",calculateTotal()),Auth.loggedIn()?/*#__PURE__*/React.createElement(\"button\",null,\"Checkout\"):/*#__PURE__*/React.createElement(\"span\",null,\"(log in to check out)\"))):/*#__PURE__*/React.createElement(\"h3\",null,/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"shocked\"},\"\\uD83D\\uDE31\"),\"You haven't added anything to your cart yet!\"));};export default Cart;","map":{"version":3,"sources":["/Users/bengallagher/Desktop/projects/ecommerce-store/client/src/components/Cart/index.js"],"names":["React","CartItem","Auth","useStoreContext","TOGGLE_CART","Cart","state","dispatch","console","log","toggleCart","type","calculateTotal","sum","cart","forEach","item","price","purchaseQuantity","toFixed","cartOpen","length","map","_id","loggedIn"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CACA,MAAO,aAAP,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,OAASC,WAAT,KAA4B,qBAA5B,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CAEf,qBAA0BF,eAAe,EAAzC,sDAAOG,KAAP,sBAAcC,QAAd,sBACAC,OAAO,CAACC,GAAR,CAAY,QAAZ,EACAD,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAEA,QAASI,CAAAA,UAAT,EAAuB,CACnBH,QAAQ,CAAC,CAACI,IAAI,CAAEP,WAAP,CAAD,CAAR,CACH,CAED,QAASQ,CAAAA,cAAT,EAAyB,CACrB,GAAIC,CAAAA,GAAG,CAAG,CAAV,CACAP,KAAK,CAACQ,IAAN,CAAWC,OAAX,CAAmB,SAAAC,IAAI,CAAI,CACvBH,GAAG,EAAIG,IAAI,CAACC,KAAL,CAAaD,IAAI,CAACE,gBAAzB,CACH,CAFD,EAGA,MAAOL,CAAAA,GAAG,CAACM,OAAJ,CAAY,CAAZ,CAAP,CACH,CAED,GAAI,CAACb,KAAK,CAACc,QAAX,CAAqB,CACjB,mBACE,2BAAK,SAAS,CAAC,aAAf,CAA6B,OAAO,CAAEV,UAAtC,eACE,4BACE,IAAI,CAAC,KADP,CAEE,aAAW,OAFb,iBADF,CADF,CAOD,CAEL,mBACF,2BAAK,SAAS,CAAC,MAAf,eACE,2BAAK,SAAS,CAAC,OAAf,CAAuB,OAAO,CAAEA,UAAhC,YADF,cAEE,8CAFF,CAGGJ,KAAK,CAACQ,IAAN,CAAWO,MAAX,cACC,+BACGf,KAAK,CAACQ,IAAN,CAAWQ,GAAX,CAAe,SAAAN,IAAI,qBAClB,oBAAC,QAAD,EAAU,GAAG,CAAEA,IAAI,CAACO,GAApB,CAAyB,IAAI,CAAEP,IAA/B,EADkB,EAAnB,CADH,cAIE,2BAAK,SAAS,CAAC,wBAAf,eACE,6CAAiBJ,cAAc,EAA/B,CADF,CAGIV,IAAI,CAACsB,QAAL,gBACE,6CADF,cAKE,wDARN,CAJF,CADD,cAkBC,2CACE,4BAAM,IAAI,CAAC,KAAX,CAAiB,aAAW,SAA5B,iBADF,gDArBJ,CADE,CA+BD,CA3DD,CA6DA,cAAenB,CAAAA,IAAf","sourcesContent":["import React from 'react';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport './style.css';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART } from '../../utils/actions';\n\nconst Cart = () => {\n\n    const [state, dispatch] = useStoreContext();\n    console.log('STATE:');\n    console.log(state);\n\n    function toggleCart () {\n        dispatch({type: TOGGLE_CART})\n    }\n\n    function calculateTotal(){\n        let sum = 0;\n        state.cart.forEach(item => {\n            sum += item.price * item.purchaseQuantity;\n        });\n        return sum.toFixed(2)\n    }\n\n    if (!state.cartOpen) {\n        return (\n          <div className=\"cart-closed\" onClick={toggleCart}>\n            <span\n              role=\"img\"\n              aria-label=\"trash\">ðŸ›’</span>\n          </div>\n        );\n      }\n\n  return (\n<div className=\"cart\">\n  <div className=\"close\" onClick={toggleCart}>[close]</div>\n  <h2>Shopping Cart</h2>\n  {state.cart.length ? (\n    <div>\n      {state.cart.map(item => (\n        <CartItem key={item._id} item={item} />\n      ))}\n      <div className=\"flex-row space-between\">\n        <strong>Total: ${calculateTotal()}</strong>\n        {\n          Auth.loggedIn() ?\n            <button>\n              Checkout\n            </button>\n            :\n            <span>(log in to check out)</span>\n        }\n      </div>\n    </div>\n  ) : (\n    <h3>\n      <span role=\"img\" aria-label=\"shocked\">\n        ðŸ˜±\n      </span>\n      You haven't added anything to your cart yet!\n    </h3>\n  )}\n</div>\n  );\n};\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}