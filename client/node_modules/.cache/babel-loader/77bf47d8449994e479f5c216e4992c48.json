{"ast":null,"code":"var _jsxFileName = \"/Users/bengallagher/Desktop/projects/ecommerce-store/client/src/pages/Success.js\";\nimport React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_ORDER } from '../utils/actions';\nimport { idbPromise } from '../utils/helpers';\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map(item => {\n        return item._id;\n      });\n\n      if (products.length) {\n        const {\n          data\n        } = await addOrder({\n          variables: {\n            products\n          }\n        });\n        const productData = data.addOrder.products;\n        productData.forEach(item => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n    }\n\n    saveOrder();\n  }, [addOrder]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Success!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Thank you for your purchase!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"You will now be redirected to the homepage\")));\n}\n\n;","map":{"version":3,"sources":["/Users/bengallagher/Desktop/projects/ecommerce-store/client/src/pages/Success.js"],"names":["React","useEffect","useMutation","ADD_ORDER","idbPromise","Jumbotron","Success","addOrder","saveOrder","cart","products","map","item","_id","length","data","variables","productData","forEach"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAIA,SAASC,OAAT,GAAkB;AAGd,QAAM,CAACC,QAAD,IAAaL,WAAW,CAACC,SAAD,CAA9B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeO,SAAf,GAA0B;AAEtB,YAAMC,IAAI,GAAG,MAAML,UAAU,CAAC,MAAD,EAAS,KAAT,CAA7B;AACA,YAAMM,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAASC,IAAI,IAAI;AAC9B,eAAOA,IAAI,CAACC,GAAZ;AACH,OAFgB,CAAjB;;AAGA,UAAIH,QAAQ,CAACI,MAAb,EAAqB;AACjB,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMR,QAAQ,CAAC;AAAES,UAAAA,SAAS,EAAE;AAAEN,YAAAA;AAAF;AAAb,SAAD,CAA/B;AACA,cAAMO,WAAW,GAAGF,IAAI,CAACR,QAAL,CAAcG,QAAlC;AAEAO,QAAAA,WAAW,CAACC,OAAZ,CAAqBN,IAAD,IAAU;AAC5BR,UAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmBQ,IAAnB,CAAV;AACD,SAFD;AAGD;AAGN;;AACDJ,IAAAA,SAAS;AACZ,GAnBQ,EAmBN,CAACD,QAAD,CAnBM,CAAT;AAsBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDALF,CADA,CADJ;AAaH;;AAAA","sourcesContent":["import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_ORDER } from '../utils/actions';\nimport { idbPromise } from '../utils/helpers';\nimport Jumbotron from \"../components/Jumbotron\";\n\n\n\nfunction Success(){\n\n\n    const [addOrder] = useMutation(ADD_ORDER)\n\n    useEffect(() => {\n        async function saveOrder(){\n\n            const cart = await idbPromise('cart', 'get')\n            const products = cart.map(item => {\n                return item._id\n            })\n            if (products.length) {\n                const { data } = await addOrder({ variables: { products } });\n                const productData = data.addOrder.products;\n              \n                productData.forEach((item) => {\n                  idbPromise('cart', 'delete', item);\n                });\n              }\n            \n\n        }\n        saveOrder();\n    }, [addOrder])\n\n\n    return (\n        <div>\n        <Jumbotron>\n          <h1>Success!</h1>\n          <h2>\n            Thank you for your purchase!\n          </h2>\n          <h2>\n            You will now be redirected to the homepage\n          </h2>\n        </Jumbotron>\n      </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}