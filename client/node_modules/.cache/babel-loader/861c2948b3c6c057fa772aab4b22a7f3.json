{"ast":null,"code":"var _jsxFileName = \"/Users/bengallagher/Desktop/projects/ecommerce-store/client/src/pages/Success.js\";\nimport React, { useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_ORDER } from \"../utils/actions\";\nimport { idbPromise } from \"../utils/helpers\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      const products = cart.map(item => {\n        return item._id;\n      });\n\n      if (products.length) {\n        const {\n          data\n        } = await addOrder({\n          variables: {\n            products\n          }\n        });\n        const productData = data.addOrder.products;\n        productData.forEach(item => {\n          idbPromise(\"cart\", \"delete\", item);\n        });\n      }\n    }\n\n    setTimeout(() => {\n      window.location.replace('/');\n    }, 3000);\n    saveOrder();\n  }, [addOrder]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Success!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Thank you for your purchase!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"You will now be redirected to the homepage\")));\n}","map":{"version":3,"sources":["/Users/bengallagher/Desktop/projects/ecommerce-store/client/src/pages/Success.js"],"names":["React","useEffect","useMutation","ADD_ORDER","idbPromise","Jumbotron","Success","addOrder","saveOrder","cart","products","map","item","_id","length","data","variables","productData","forEach","setTimeout","window","location","replace"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM,CAACC,QAAD,IAAaL,WAAW,CAACC,SAAD,CAA9B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeO,SAAf,GAA2B;AACzB,YAAMC,IAAI,GAAG,MAAML,UAAU,CAAC,MAAD,EAAS,KAAT,CAA7B;AACA,YAAMM,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;AAClC,eAAOA,IAAI,CAACC,GAAZ;AACD,OAFgB,CAAjB;;AAGA,UAAIH,QAAQ,CAACI,MAAb,EAAqB;AACnB,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMR,QAAQ,CAAC;AAAES,UAAAA,SAAS,EAAE;AAAEN,YAAAA;AAAF;AAAb,SAAD,CAA/B;AACA,cAAMO,WAAW,GAAGF,IAAI,CAACR,QAAL,CAAcG,QAAlC;AAEAO,QAAAA,WAAW,CAACC,OAAZ,CAAqBN,IAAD,IAAU;AAC5BR,UAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmBQ,IAAnB,CAAV;AACD,SAFD;AAGD;AACF;;AACDO,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,GAAxB;AACH,KAFS,EAEP,IAFO,CAAV;AAIAd,IAAAA,SAAS;AACV,GApBQ,EAoBN,CAACD,QAAD,CApBM,CAAT;AAsBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAHF,CADF,CADF;AASD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_ORDER } from \"../utils/actions\";\nimport { idbPromise } from \"../utils/helpers\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      const products = cart.map((item) => {\n        return item._id;\n      });\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise(\"cart\", \"delete\", item);\n        });\n      }\n    }\n    setTimeout(() => {\n        window.location.replace('/')\n    }, 3000)\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the homepage</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}