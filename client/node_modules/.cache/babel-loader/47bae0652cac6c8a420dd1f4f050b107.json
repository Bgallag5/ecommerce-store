{"ast":null,"code":"import _slicedToArray from\"/Users/bengallagher/Desktop/projects/ecommerce-store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from'react';import{useQuery}from'@apollo/client';import{UPDATE_CATEGORIES,UPDATE_CURRENT_CATEGORY}from'../../utils/actions';import{QUERY_CATEGORIES}from'../../utils/queries';import{useStoreContext}from'../../utils/GlobalState';function CategoryMenu(){var _useStoreContext=useStoreContext(),_useStoreContext2=_slicedToArray(_useStoreContext,2),state=_useStoreContext2[0],dispatch=_useStoreContext2[1];var categories=state.categories;var _useQuery=useQuery(QUERY_CATEGORIES),categoryData=_useQuery.data;useEffect(function(){if(categoryData){dispatch({type:UPDATE_CATEGORIES,categories:categoryData.categories});}},[categoryData,dispatch]);var handleClick=function handleClick(id){dispatch({type:UPDATE_CURRENT_CATEGORY,curentCategory:id});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Choose a Category:\"),categories.map(function(item){return/*#__PURE__*/React.createElement(\"button\",{key:item._id,onClick:function onClick(){handleClick(item._id);}},item.name);}));}export default CategoryMenu;","map":{"version":3,"sources":["/Users/bengallagher/Desktop/projects/ecommerce-store/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","useQuery","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","useStoreContext","CategoryMenu","state","dispatch","categories","categoryData","data","type","handleClick","id","curentCategory","map","item","_id","name"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OAASC,iBAAT,CAA4BC,uBAA5B,KAA2D,qBAA3D,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,OAASC,eAAT,KAAgC,yBAAhC,CAEA,QAASC,CAAAA,YAAT,EAAwB,CACtB,qBAA0BD,eAAe,EAAzC,sDAAOE,KAAP,sBAAcC,QAAd,sBACA,GAAQC,CAAAA,UAAR,CAAuBF,KAAvB,CAAQE,UAAR,CACA,cAA+BR,QAAQ,CAACG,gBAAD,CAAvC,CAAcM,YAAd,WAAQC,IAAR,CAEFX,SAAS,CAAC,UAAM,CACd,GAAIU,YAAJ,CAAkB,CAChBF,QAAQ,CAAC,CACPI,IAAI,CAAEV,iBADC,CAEPO,UAAU,CAAEC,YAAY,CAACD,UAFlB,CAAD,CAAR,CAID,CACF,CAPQ,CAON,CAACC,YAAD,CAAeF,QAAf,CAPM,CAAT,CASA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,EAAD,CAAQ,CAC1BN,QAAQ,CAAC,CACPI,IAAI,CAAET,uBADC,CAEPY,cAAc,CAAED,EAFT,CAAD,CAAR,CAID,CALD,CAOE,mBACE,4CACE,mDADF,CAEGL,UAAU,CAACO,GAAX,CAAe,SAACC,IAAD,qBACd,8BACE,GAAG,CAAEA,IAAI,CAACC,GADZ,CAEE,OAAO,CAAE,kBAAM,CACbL,WAAW,CAACI,IAAI,CAACC,GAAN,CAAX,CACD,CAJH,EAMGD,IAAI,CAACE,IANR,CADc,EAAf,CAFH,CADF,CAeD,CAED,cAAeb,CAAAA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from '../../utils/GlobalState';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n  const { categories } = state;\n  const { data: categoryData } = useQuery(QUERY_CATEGORIES)\n\nuseEffect(() => {\n  if (categoryData) {\n    dispatch({\n      type: UPDATE_CATEGORIES,\n      categories: categoryData.categories,\n    })\n  }\n}, [categoryData, dispatch])\n\nconst handleClick = (id) => {\n  dispatch({\n    type: UPDATE_CURRENT_CATEGORY,\n    curentCategory: id,\n  })\n}\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"]},"metadata":{},"sourceType":"module"}